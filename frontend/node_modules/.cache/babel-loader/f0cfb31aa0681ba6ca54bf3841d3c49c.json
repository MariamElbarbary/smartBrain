{"ast":null,"code":"var _jsxFileName = \"/Users/mariamelbarbary/Desktop/learn_js/small projects/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport { ROUTE, PARTICLESOPTIONS } from './constants';\nimport ClarifaiApp from './ClarifaiApi';\nconst initalState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: ROUTE.signin,\n  isSignedIn: false,\n  user: {\n    id: '',\n    email: '',\n    name: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          email: data.email,\n          name: data.name,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data['outputs'][0]['data']['regions'][0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        rightCol: width - clarifaiFace.right_col * width,\n        topRow: clarifaiFace.top_row * height,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.onRouteChange = routeConfig => {\n      if (routeConfig === ROUTE.signout) {\n        this.setState(initalState);\n      } else if (routeConfig === ROUTE.home) {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: routeConfig\n      });\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      ClarifaiApp.faceDetectionApi(this.state.input).then(response => {\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: {\n            'content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: this.state.user.id\n          })\n        }).then(response => response.json()).then(count => this.setState(Object.assign(this.state.user, {\n          entries: count\n        }))).catch(console.log);\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.homePage = () => {\n      console.log(this.state.user);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Logo, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Rank, {\n        name: this.state.user.name,\n        entries: this.state.user.entries,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(FaceRecognition, {\n        imageUrl: this.state.imageUrl,\n        box: this.state.box,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }\n      }));\n    };\n\n    this.renderRoute = () => {\n      switch (this.state.route) {\n        case ROUTE.home:\n          return this.homePage();\n\n        case ROUTE.register:\n          return /*#__PURE__*/React.createElement(Register, {\n            loadUser: this.loadUser,\n            onRouteChange: this.onRouteChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 16\n            }\n          });\n\n        default:\n          return /*#__PURE__*/React.createElement(Signin, {\n            loadUser: this.loadUser,\n            onRouteChange: this.onRouteChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 16\n            }\n          });\n      }\n    };\n\n    this.state = initalState;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: PARTICLESOPTIONS,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      onRouteChange: this.onRouteChange,\n      isSignedIn: this.state.isSignedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }), this.renderRoute());\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mariamelbarbary/Desktop/learn_js/small projects/facerecognitionbrain/src/App.js"],"names":["React","Component","Particles","Navigation","Logo","Rank","ImageLinkForm","FaceRecognition","Signin","Register","ROUTE","PARTICLESOPTIONS","ClarifaiApp","initalState","input","imageUrl","box","route","signin","isSignedIn","user","id","email","name","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","rightCol","right_col","topRow","top_row","bottomRow","bottom_row","onRouteChange","routeConfig","signout","home","displayFaceBox","onInputChange","event","target","value","onButtonSubmit","state","faceDetectionApi","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","console","log","err","homePage","renderRoute","register","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation'\nimport Logo from './components/Logo/Logo'\nimport Rank from './components/Rank/Rank'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport Signin from './components/Signin/Signin'\nimport Register from './components/Register/Register'\nimport { ROUTE, PARTICLESOPTIONS } from './constants'\nimport ClarifaiApp from './ClarifaiApi'\n\nconst initalState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: ROUTE.signin,\n  isSignedIn: false,\n  user: {\n    id: '',\n    email: '',\n    name: '',\n    entries: 0,\n    joined: '',\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initalState;\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        email: data.email,\n        name: data.name,\n        entries: data.entries,\n        joined: data.joined,\n      }\n    });\n  }\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data['outputs'][0]['data']['regions'][0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width)\n    const height = Number(image.height)\n\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      rightCol: width - (clarifaiFace.right_col * width),\n      topRow: clarifaiFace.top_row * height,\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n  onRouteChange = (routeConfig) => {\n    if (routeConfig === ROUTE.signout) {\n      this.setState(initalState);\n    }\n    else if (routeConfig === ROUTE.home) {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: routeConfig });\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box });\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n  }\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input })\n\n    ClarifaiApp.faceDetectionApi(this.state.input)\n      .then(response => {\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: { 'content-Type': 'application/json' },\n          body: JSON.stringify({ id: this.state.user.id })\n        })\n          .then(response => response.json())\n          .then(count => this.setState(Object.assign(this.state.user, { entries: count })))\n          .catch(console.log);\n          \n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err))\n  }\n\n  homePage = () => {\n    console.log(this.state.user)\n    return (<div>\n      <Logo />\n      <Rank name={this.state.user.name} entries={this.state.user.entries} />\n      <ImageLinkForm\n        onInputChange={this.onInputChange}\n        onButtonSubmit={this.onButtonSubmit} />\n      <FaceRecognition imageUrl={this.state.imageUrl} box={this.state.box} />\n    </div>);\n  }\n\n  renderRoute = () => {\n    switch (this.state.route) {\n      case ROUTE.home:\n        return this.homePage();\n      case ROUTE.register:\n        return <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n      default:\n        return <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={PARTICLESOPTIONS} />\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={this.state.isSignedIn} />\n        {this.renderRoute()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}