{"ast":null,"code":"var _jsxFileName = \"/Users/mariamelbarbary/Desktop/learn_js/small projects/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport { ROUTE, PARTICLESOPTIONS, INITIALSTATE } from './constants';\nimport ClarifaiApp from './ClarifaiApi';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          email: data.email,\n          name: data.name,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data['outputs'][0]['data']['regions'][0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        rightCol: width - clarifaiFace.right_col * width,\n        topRow: clarifaiFace.top_row * height,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.onRouteChange = routeConfig => {\n      if (routeConfig === ROUTE.signout) {\n        this.setState(INITIALSTATE);\n      } else if (routeConfig === ROUTE.home) {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: routeConfig\n      });\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      ClarifaiApp.faceDetectionApi(this.state.input).then(response => {\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: {\n            'content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: this.state.user.id\n          })\n        }).then(response => response.json()).then(count => this.setState(Object.assign(this.state.user, {\n          entries: count\n        }))).catch(console.log);\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.renderRoute = () => {\n      switch (this.state.route) {\n        case ROUTE.home:\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(Logo, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(Rank, {\n            name: this.state.user.name,\n            entries: this.state.user.entries,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n            onInputChange: this.onInputChange,\n            onButtonSubmit: this.onButtonSubmit,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(FaceRecognition, {\n            imageUrl: this.state.imageUrl,\n            box: this.state.box,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 13\n            }\n          }));\n\n        case ROUTE.register:\n          return /*#__PURE__*/React.createElement(Register, {\n            loadUser: this.loadUser,\n            onRouteChange: this.onRouteChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 16\n            }\n          });\n\n        default:\n          return /*#__PURE__*/React.createElement(Signin, {\n            loadUser: this.loadUser,\n            onRouteChange: this.onRouteChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 16\n            }\n          });\n      }\n    };\n\n    this.state = INITIALSTATE;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: PARTICLESOPTIONS,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      onRouteChange: this.onRouteChange,\n      isSignedIn: this.state.isSignedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }), this.renderRoute());\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mariamelbarbary/Desktop/learn_js/small projects/facerecognitionbrain/src/App.js"],"names":["React","Component","Particles","Navigation","Logo","Rank","ImageLinkForm","FaceRecognition","Signin","Register","ROUTE","PARTICLESOPTIONS","INITIALSTATE","ClarifaiApp","App","constructor","loadUser","data","setState","user","id","email","name","entries","joined","calculateFaceLocation","clarifaiFace","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","rightCol","right_col","topRow","top_row","bottomRow","bottom_row","onRouteChange","routeConfig","signout","home","isSignedIn","route","displayFaceBox","box","onInputChange","event","input","target","value","onButtonSubmit","imageUrl","state","faceDetectionApi","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","console","log","err","renderRoute","register","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation'\nimport Logo from './components/Logo/Logo'\nimport Rank from './components/Rank/Rank'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport Signin from './components/Signin/Signin'\nimport Register from './components/Register/Register'\nimport { ROUTE, PARTICLESOPTIONS, INITIALSTATE } from './constants'\nimport ClarifaiApp from './ClarifaiApi'\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = INITIALSTATE;\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        email: data.email,\n        name: data.name,\n        entries: data.entries,\n        joined: data.joined,\n      }\n    });\n  }\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data['outputs'][0]['data']['regions'][0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width)\n    const height = Number(image.height)\n\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      rightCol: width - (clarifaiFace.right_col * width),\n      topRow: clarifaiFace.top_row * height,\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n  onRouteChange = (routeConfig) => {\n    if (routeConfig === ROUTE.signout) {\n      this.setState(INITIALSTATE);\n    }\n    else if (routeConfig === ROUTE.home) {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: routeConfig });\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box });\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n  }\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input })\n\n    ClarifaiApp.faceDetectionApi(this.state.input)\n      .then(response => {\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: { 'content-Type': 'application/json' },\n          body: JSON.stringify({ id: this.state.user.id })\n        })\n          .then(response => response.json())\n          .then(count => this.setState(Object.assign(this.state.user, { entries: count })))\n          .catch(console.log);\n\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err))\n  }\n\n  renderRoute = () => {\n    switch (this.state.route) {\n      case ROUTE.home:\n        return (\n          <div>\n            <Logo />\n            <Rank name={this.state.user.name} entries={this.state.user.entries} />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit} />\n            <FaceRecognition imageUrl={this.state.imageUrl} box={this.state.box} />\n          </div>\n        );\n      case ROUTE.register:\n        return <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n      default:\n        return <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={PARTICLESOPTIONS} />\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={this.state.isSignedIn} />\n        {this.renderRoute()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}